// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package br.com.camiloporto.cloudfinance.service.impl;

import br.com.camiloporto.cloudfinance.model.AccountTransaction;
import br.com.camiloporto.cloudfinance.repository.AccountTransactionRepository;
import br.com.camiloporto.cloudfinance.service.impl.TransactionManagerImpl;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect TransactionManagerImpl_Roo_Service {
    
    declare @type: TransactionManagerImpl: @Service;
    
    declare @type: TransactionManagerImpl: @Transactional;
    
    @Autowired
    AccountTransactionRepository TransactionManagerImpl.accountTransactionRepository;
    
    public long TransactionManagerImpl.countAllAccountTransactions() {
        return accountTransactionRepository.count();
    }
    
    public void TransactionManagerImpl.deleteAccountTransaction(AccountTransaction accountTransaction) {
        accountTransactionRepository.delete(accountTransaction);
    }
    
    public AccountTransaction TransactionManagerImpl.findAccountTransaction(Long id) {
        return accountTransactionRepository.findOne(id);
    }
    
    public List<AccountTransaction> TransactionManagerImpl.findAllAccountTransactions() {
        return accountTransactionRepository.findAll();
    }
    
    public List<AccountTransaction> TransactionManagerImpl.findAccountTransactionEntries(int firstResult, int maxResults) {
        return accountTransactionRepository.findAll(new org.springframework.data.domain.PageRequest(firstResult / maxResults, maxResults)).getContent();
    }
    
    public void TransactionManagerImpl.saveAccountTransaction(AccountTransaction accountTransaction) {
        accountTransactionRepository.save(accountTransaction);
    }
    
    public AccountTransaction TransactionManagerImpl.updateAccountTransaction(AccountTransaction accountTransaction) {
        return accountTransactionRepository.save(accountTransaction);
    }
    
}
