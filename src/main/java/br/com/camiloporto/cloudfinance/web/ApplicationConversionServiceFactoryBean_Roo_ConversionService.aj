// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package br.com.camiloporto.cloudfinance.web;

import br.com.camiloporto.cloudfinance.model.Account;
import br.com.camiloporto.cloudfinance.model.AccountSystem;
import br.com.camiloporto.cloudfinance.model.AccountTransaction;
import br.com.camiloporto.cloudfinance.repository.AccountSystemRepository;
import br.com.camiloporto.cloudfinance.service.AccountManager;
import br.com.camiloporto.cloudfinance.service.TransactionManager;
import br.com.camiloporto.cloudfinance.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    @Autowired
    AccountManager ApplicationConversionServiceFactoryBean.accountManager;
    
    @Autowired
    AccountSystemRepository ApplicationConversionServiceFactoryBean.accountSystemRepository;
    
    @Autowired
    TransactionManager ApplicationConversionServiceFactoryBean.transactionManager;
    
    public Converter<Account, String> ApplicationConversionServiceFactoryBean.getAccountToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<br.com.camiloporto.cloudfinance.model.Account, java.lang.String>() {
            public String convert(Account account) {
                return new StringBuilder().append(account.getName()).append(' ').append(account.getDescription()).toString();
            }
        };
    }
    
    public Converter<Long, Account> ApplicationConversionServiceFactoryBean.getIdToAccountConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, br.com.camiloporto.cloudfinance.model.Account>() {
            public br.com.camiloporto.cloudfinance.model.Account convert(java.lang.Long id) {
                return accountManager.findAccount(id);
            }
        };
    }
    
    public Converter<String, Account> ApplicationConversionServiceFactoryBean.getStringToAccountConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, br.com.camiloporto.cloudfinance.model.Account>() {
            public br.com.camiloporto.cloudfinance.model.Account convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Account.class);
            }
        };
    }
    
    public Converter<AccountSystem, String> ApplicationConversionServiceFactoryBean.getAccountSystemToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<br.com.camiloporto.cloudfinance.model.AccountSystem, java.lang.String>() {
            public String convert(AccountSystem accountSystem) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<Long, AccountSystem> ApplicationConversionServiceFactoryBean.getIdToAccountSystemConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, br.com.camiloporto.cloudfinance.model.AccountSystem>() {
            public br.com.camiloporto.cloudfinance.model.AccountSystem convert(java.lang.Long id) {
                return accountSystemRepository.findOne(id);
            }
        };
    }
    
    public Converter<String, AccountSystem> ApplicationConversionServiceFactoryBean.getStringToAccountSystemConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, br.com.camiloporto.cloudfinance.model.AccountSystem>() {
            public br.com.camiloporto.cloudfinance.model.AccountSystem convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), AccountSystem.class);
            }
        };
    }
    
    public Converter<AccountTransaction, String> ApplicationConversionServiceFactoryBean.getAccountTransactionToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<br.com.camiloporto.cloudfinance.model.AccountTransaction, java.lang.String>() {
            public String convert(AccountTransaction accountTransaction) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<Long, AccountTransaction> ApplicationConversionServiceFactoryBean.getIdToAccountTransactionConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, br.com.camiloporto.cloudfinance.model.AccountTransaction>() {
            public br.com.camiloporto.cloudfinance.model.AccountTransaction convert(java.lang.Long id) {
                return transactionManager.findAccountTransaction(id);
            }
        };
    }
    
    public Converter<String, AccountTransaction> ApplicationConversionServiceFactoryBean.getStringToAccountTransactionConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, br.com.camiloporto.cloudfinance.model.AccountTransaction>() {
            public br.com.camiloporto.cloudfinance.model.AccountTransaction convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), AccountTransaction.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getAccountToStringConverter());
        registry.addConverter(getIdToAccountConverter());
        registry.addConverter(getStringToAccountConverter());
        registry.addConverter(getAccountSystemToStringConverter());
        registry.addConverter(getIdToAccountSystemConverter());
        registry.addConverter(getStringToAccountSystemConverter());
        registry.addConverter(getAccountTransactionToStringConverter());
        registry.addConverter(getIdToAccountTransactionConverter());
        registry.addConverter(getStringToAccountTransactionConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
